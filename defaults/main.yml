---
# Basic settings
el_version: 7
postgresql_version: 11

# Manage cluster with systemd, pg_ctl or patroni
postgresql_service: systemd

# Patroni specific settings. Used if postgresql_service = patroni.
patroni_cluster_name: "batman"
patroni_namespace: "/service"
patroni_host_name: "{{ ansible_hostname }}"
etcd_hosts: "localhost:2379"
# Consul settings
# consul_host: "localhost:8500"
# consul_token: ""
# consul_url: "localhost:8500"

# pg_data mast be real directory not symlink, or pgbackrest won't work.
pg_data: /var/lib/pgsql/{{ postgresql_version }}/data
pg_conf: "{{ pg_data }}"
pgbackrest_dir: /var/lib/pgsql/{{ postgresql_version }}/backups
postgresql_admin_user: postgres
postgresql_port: 5432
pgbackrest_stanza: "{{ ansible_hostname }}"

# List of databases to be precreated.
databases:
  - postgres
  - powa
  - mamonsu
  - repmgr

# List of precreated users.
db_users:
  - username: postgres
    password: invalid
    superuser: true
    replication: true
  - username: mamonsu
    password:
    superuser: false
    replication: false
  - username: powa
    password:
    superuser: true
    replication: false
  - username: repmgr
    password:
    superuser: true
    replication: true

# right now this is only extensions that go to shared_preload libraries
postgresql_extensions:
  ["pg_stat_statements", "powa", "pg_stat_kcache",
   "pg_qualstats", "repmgr", "auto_explain"]

# Postgresql.conf 'reasonable' defaults
postgresql_conf:
  listen_addresses: "'*'"
  port: "{{ postgresql_port }}"
  max_connections: 100
  shared_buffers: "{{ (ansible_memory_mb.real.total/4) |round|int }}MB"
  effective_cache_size: "{{ ansible_memory_mb.real.total }}MB"
  shared_preload_libraries: "'{{ postgresql_extensions|join(',') }}'"
  max_wal_senders: "10"
  hot_standby: "on"
  wal_level: "logical"
  wal_keep_segments: "5000"
  wal_log_hints: "on"
  max_parallel_workers_per_gather: "4"
  max_parallel_workers: "4"
  checkpoint_timeout: "30min"
  checkpoint_completion_target: "0.9"
  track_activity_query_size: "10240"
  autovacuum_vacuum_scale_factor: "0.05"
  autovacuum_analyze_scale_factor: "0.02"
  autovacuum_vacuum_cost_limit: "2000"
  logging_collector: "on"
  log_line_prefix: "'%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '"
  log_rotation_age: "1h"
  log_filename: "'postgresql-%H.log'"
  log_min_duration_statement: 100
  log_checkpoints: "on"
  log_connections: "on"
  log_disconnections: "on"
  log_lock_waits: "on"
  log_temp_files: 0
  log_autovacuum_min_duration: 0
  log_error_verbosity: "default"
  lc_messages: 'C'
  log_timezone: 'W-SU'
  pg_stat_statements.track: "all"
  auto_explain.log_min_duration: "0"
  auto_explain.log_analyze: "true"
  auto_explain.log_buffers: "true"
  auto_explain.log_timing: "true"
  auto_explain.log_triggers: "true"
  auto_explain.log_verbose: "true"
  auto_explain.log_format: "text"
  auto_explain.log_nested_statements: "true"
  auto_explain.sample_rate: "1"

# Right now this section only affects patroni's hba.
postgresql_hba:
  - local all all peer
  - host all all 127.0.0.1/32 trust
  - host all all ::1/128 trust
  - local replication all trust
  - host replication all 127.0.0.1/32 trust
  - host replication all ::1/128 trust
